{"version":3,"sources":["views/pages/shifts/store/shiftsStore.js","components/schedule/MonthShedule.jsx","views/pages/shifts/ShiftsPage.jsx"],"names":["path","getShifts","createAsyncThunk","a","axios","get","config","apiUrl","data","id","post","MonthSchedule","currentDate","Paper","height","locale","startDayHour","endDayHour","ShiftPage","dispatch","useDispatch","shifts","useSelector","state","pages","useState","loading","setLoading","useEffect","then","map","item","title","startDate","Date","start_time","endDate","end_time","MainCard","HelmLoading"],"mappings":"yMAIMA,EAAO,UAEAC,EAAYC,YAAiB,iBAAD,sBAAmB,sBAAAC,EAAA,sEAC1CC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,IADY,uCACHQ,KAAKA,MADF,4C,GAI9BN,YAAiB,mBAAD,uCAAqB,WAAOO,GAAP,SAAAN,EAAA,sEACjDC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,EAA9B,oBAA8CS,IADG,uCACID,KAAKA,MADT,2CAArB,uDAIXN,YAAiB,uBAAD,uCAAyB,+BAAAC,EAAA,yDAASK,EAAT,EAASA,OAAMC,EAAf,EAAeA,IAAf,gCAEtDL,IAAMM,KAAN,UAAcJ,IAAOC,OAArB,YAA+BP,EAA/B,sBAAiDS,GAAMD,GAFD,8CAIDA,KAAKA,MAJJ,uBAItDJ,IAAMM,KAAN,UAAcJ,IAAOC,OAArB,YAA+BP,EAA/B,WAA8CQ,GAJQ,4CAAzB,uDAQxBN,YAAiB,eAAD,uCAAiB,WAAOO,GAAP,SAAAN,EAAA,sEAC1CC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,EAA9B,sBAAgDS,IADN,uCACaD,KAAKA,MADlB,2CAAjB,uD,yCCL5BG,MAZf,SAAuBC,EAAaJ,GAChC,OACI,cAACK,EAAA,EAAD,UACI,eAAC,IAAD,CAAWL,KAAMA,EAAMM,OAAQ,IAAKC,OAAO,QAA3C,UACI,cAAC,IAAD,CAAWH,YAAaA,IACxB,cAAC,IAAD,CAAWI,aAAc,EAAGC,WAAY,KACxC,cAAC,IAAD,UCoBDC,UAxBf,WACI,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,UAClD,EAA8BI,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACND,GAAW,GACXR,EAASlB,KAAa4B,MAAK,kBAAMF,GAAW,QAC7C,CAACR,IAEJ,IAAMX,GACDkB,GACDL,EAAOS,KAAI,SAACC,GACR,MAAO,CACHtB,GAAIsB,EAAKtB,GACTuB,MAAOD,EAAKtB,GACZwB,UAAW,IAAIC,KAAKH,EAAKI,YACzBC,QAAS,IAAIF,KAAKH,EAAKM,cAInC,OAAO,cAACC,EAAA,EAAD,CAAUN,MAAM,iCAAhB,SAA0BN,EAA4C,cAACa,EAAA,EAAD,IAAlC5B,EAAc,IAAIuB,KAAQ1B","file":"static/js/20.f9bee572.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport config from '../../../../config';\r\n\r\nconst path = 'working';\r\n\r\nexport const getShifts = createAsyncThunk('shifts/getList', async () => {\r\n    return (await axios.get(`${config.apiUrl}/${path}`)).data.data;\r\n});\r\n\r\nexport const getShiftDetail = createAsyncThunk('shifts/getDetail', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/view?id=${id}`)).data.data;\r\n});\r\n\r\nexport const createOrUpdateShift = createAsyncThunk('shift/createOrUpdate', async ({ data, id }) => {\r\n    if (id) {\r\n        return (await axios.post(`${config.apiUrl}/${path}/update?id=${id}`, data)).data.data;\r\n    } else {\r\n        return (await axios.post(`${config.apiUrl}/${path}/create`, data)).data.data;\r\n    }\r\n});\r\n\r\nexport const deleteShift = createAsyncThunk('shift/delete', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/delete?id=${id}`)).data.data;\r\n});\r\n","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Appointments, MonthView, Scheduler } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\n\r\nfunction MonthSchedule(currentDate, data) {\r\n    return (\r\n        <Paper>\r\n            <Scheduler data={data} height={660} locale=\"ru-RU\">\r\n                <ViewState currentDate={currentDate} />\r\n                <MonthView startDayHour={8} endDayHour={22} />\r\n                <Appointments />\r\n            </Scheduler>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default MonthSchedule;\r\n","import MainCard from '../../../ui-component/cards/MainCard';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getShifts } from './store/shiftsStore';\r\nimport HelmLoading from '../../../components/loading/HelmLoading';\r\nimport MonthSchedule from '../../../components/schedule/MonthShedule';\r\n\r\nfunction ShiftPage() {\r\n    const dispatch = useDispatch();\r\n    const shifts = useSelector((state) => state.pages.shifts);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        dispatch(getShifts()).then(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    const data =\r\n        !loading &&\r\n        shifts.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                title: item.id,\r\n                startDate: new Date(item.start_time),\r\n                endDate: new Date(item.end_time)\r\n            };\r\n        });\r\n\r\n    return <MainCard title=\"Смены\">{!loading ? MonthSchedule(new Date(), data) : <HelmLoading />}</MainCard>;\r\n}\r\n\r\nexport default ShiftPage;\r\n"],"sourceRoot":""}