{"version":3,"sources":["views/pages/appointment/appointmentStore.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/DutyCard.js","ui-component/cards/Skeleton/EarningCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/chart-data/total-order-year-line-chart.js","assets/images/icons/earning.svg","views/dashboard/Default/AverageBillCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","components/schedule/DaySchedule.jsx","views/dashboard/Default/DayScheduleCard.js","views/dashboard/Default/index.js"],"names":["path","getAppointments","createAsyncThunk","a","axios","get","config","apiUrl","data","id","post","PopularCard","Card","CardContent","Grid","container","spacing","gridSpacing","item","xs","alignItems","justifyContent","zeroMinWidth","Skeleton","variant","height","width","sx","p","display","pt","DutyCard","isLoading","MainCard","content","style","marginBottom","alignContent","Typography","direction","color","Divider","my","CardActions","Button","size","disableElevation","component","Link","to","EarningCard","chartData","type","options","chart","sparkline","enabled","dataLabels","colors","fill","opacity","stroke","curve","yaxis","min","max","tooltip","theme","fixed","x","show","y","title","marker","series","name","CardWrapper","styled","backgroundColor","palette","primary","dark","overflow","position","zIndex","background","borderRadius","top","right","breakpoints","down","AverageBillCard","useTheme","useState","timeValue","setTimeValue","handleChangeTime","event","newValue","border","Box","Avatar","typography","commonAvatar","largeAvatar","mt","src","EarningIcon","alt","onClick","e","mb","fontSize","fontWeight","mr","smallAvatar","cursor","transform","ChartDataMonth","ChartDataYear","TotalGrowthBarChart","DaySchedule","currentDate","Paper","locale","loading","startDayHour","endDayHour","DayScheduleCard","dispatch","useDispatch","appointments","useSelector","state","pages","setLoading","useEffect","then","map","description","startDate","Date","create_data","endDate","end_data","HelmLoading","Dashboard","md"],"mappings":"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","file":"static/js/16.097e76cb.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport config from '../../../config';\r\n\r\nconst path = 'appointment';\r\n\r\nexport const getAppointments = createAsyncThunk('appointments/getList', async () => {\r\n    return (await axios.get(`${config.apiUrl}/${path}`)).data.data;\r\n});\r\n\r\nexport const getAppointmentDetail = createAsyncThunk('appointments/getDetail', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/view?id=${id}`)).data.data;\r\n});\r\n\r\nexport const createOrUpdateAppointment = createAsyncThunk('doctor/createOrUpdate', async ({ data, id }) => {\r\n    if (id) {\r\n        return (await axios.post(`${config.apiUrl}/${path}/update?id=${id}`, data)).data.data;\r\n    } else {\r\n        return (await axios.post(`${config.apiUrl}/${path}/create`, data)).data.data;\r\n    }\r\n});\r\n\r\nexport const deleteAppointment = createAsyncThunk('doctor/delete', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/delete?id=${id}`)).data.data;\r\n});\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={150} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\r\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, CardActions, CardContent, Divider, Grid, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\n\r\n// assets\r\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\r\n\r\nconst DutyCard = ({ isLoading }) => {\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} style={{ marginBottom: '16px' }}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Сегодня дежурят:</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Ольга Белюченко\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">\r\n                                                Ветеринарный врач\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Надежда Соколова\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">\r\n                                                Генерал\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\r\n                        <Button size=\"small\" disableElevation component={Link} to=\"/shifts\">\r\n                            Посмотреть всех\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nDutyCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default DutyCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON - EARNING CARD ||============================== //\r\n\r\nconst EarningCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" height={30} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default EarningCard;\r\n","// ===========================|| DASHBOARD - TOTAL ORDER MONTH CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'line',\r\n    height: 90,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#fff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 3\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n            max: 100\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Total Order'\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'series1',\r\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","// ===========================|| DASHBOARD - TOTAL ORDER YEAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'line',\r\n    height: 90,\r\n    options: {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        colors: ['#fff'],\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 3\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n            max: 100\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Total Order'\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'series1',\r\n            data: [35, 44, 9, 54, 45, 66, 41, 69]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","export default __webpack_public_path__ + \"static/media/earning.00f461a5.svg\";","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport EarningIcon from '../../../assets/images/icons/earning.svg';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst AverageBillCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <img src={EarningIcon} alt=\"Notification\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, true)}\r\n                                        >\r\n                                            Месяц\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={!timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, false)}\r\n                                        >\r\n                                            День\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {timeValue ? (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        108 ₽\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        961 ₽\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                                </Avatar>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color: theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Средний чек\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nAverageBillCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default AverageBillCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","import Paper from '@mui/material/Paper';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport { Appointments, DayView, Scheduler } from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nfunction DaySchedule(currentDate, data) {\r\n    return (\r\n        <Paper>\r\n            <Scheduler data={data} locale=\"ru-RU\" loading={true}>\r\n                <ViewState currentDate={currentDate} />\r\n                <DayView startDayHour={8} endDayHour={22} />\r\n                <Appointments />\r\n            </Scheduler>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default DaySchedule;\r\n","import PropTypes from 'prop-types';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport DaySchedule from '../../../components/schedule/DaySchedule';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAppointments } from '../../pages/appointment/appointmentStore';\r\nimport HelmLoading from '../../../components/loading/HelmLoading';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst DayScheduleCard = ({ isLoading }) => {\r\n    const dispatch = useDispatch();\r\n    const appointments = useSelector((state) => state.pages.appointments);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        dispatch(getAppointments()).then(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    const data =\r\n        !loading &&\r\n        appointments.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                title: item.description,\r\n                startDate: new Date(item.create_data),\r\n                endDate: new Date(item.end_data)\r\n            };\r\n        });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Typography variant=\"h4\" sx={{ marginBottom: '20px' }}>\r\n                        Приём на сегодня:\r\n                    </Typography>\r\n                    {!loading ? DaySchedule(new Date(), data) : <HelmLoading />}\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nDayScheduleCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default DayScheduleCard;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport DutyCard from './DutyCard';\r\nimport AverageBillCard from './AverageBillCard';\r\nimport DayScheduleCard from './DayScheduleCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <AverageBillCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <DayScheduleCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <DutyCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}