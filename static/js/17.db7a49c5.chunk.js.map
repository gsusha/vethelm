{"version":3,"sources":["views/pages/appointment/appointmentStore.js","components/schedule/WeekSchedule.jsx","views/pages/appointment/AppointmentPage.jsx"],"names":["path","getAppointments","createAsyncThunk","a","axios","get","config","apiUrl","data","id","post","WeekSchedule","currentDate","Paper","height","locale","startDayHour","endDayHour","AppointmentPage","dispatch","useDispatch","appointments","useSelector","state","pages","useState","loading","setLoading","useEffect","then","map","item","title","description","startDate","Date","create_data","endDate","end_data","MainCard","HelmLoading"],"mappings":"qMAIMA,EAAO,cAEAC,EAAkBC,YAAiB,uBAAD,sBAAyB,sBAAAC,EAAA,sEACtDC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,IADwB,uCACfQ,KAAKA,MADU,4CAIpCN,YAAiB,yBAAD,uCAA2B,WAAOO,GAAP,SAAAN,EAAA,sEAC7DC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,EAA9B,oBAA8CS,IADe,uCACRD,KAAKA,MADG,2CAA3B,uDAIXN,YAAiB,wBAAD,uCAA0B,+BAAAC,EAAA,yDAASK,EAAT,EAASA,OAAMC,EAAf,EAAeA,IAAf,gCAE7DL,IAAMM,KAAN,UAAcJ,IAAOC,OAArB,YAA+BP,EAA/B,sBAAiDS,GAAMD,GAFM,8CAIRA,KAAKA,MAJG,uBAI7DJ,IAAMM,KAAN,UAAcJ,IAAOC,OAArB,YAA+BP,EAA/B,WAA8CQ,GAJe,4CAA1B,uDAQxBN,YAAiB,gBAAD,uCAAkB,WAAOO,GAAP,SAAAN,EAAA,sEACjDC,IAAMC,IAAN,UAAaC,IAAOC,OAApB,YAA8BP,EAA9B,sBAAgDS,IADC,uCACMD,KAAKA,MADX,2CAAlB,wD,qGCLlCG,MAZf,SAAsBC,EAAaJ,GAC/B,OACI,cAACK,EAAA,EAAD,UACI,eAAC,IAAD,CAAWL,KAAMA,EAAMM,OAAQ,IAAKC,OAAO,QAA3C,UACI,cAAC,IAAD,CAAWH,YAAaA,IACxB,cAAC,IAAD,CAAUI,aAAc,EAAGC,WAAY,KACvC,cAAC,IAAD,U,yBCoBDC,UAxBf,WACI,IAAMC,EAAWC,cACXC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,gBACxD,EAA8BI,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACND,GAAW,GACXR,EAASlB,eAAmB4B,MAAK,kBAAMF,GAAW,QACnD,CAACR,IAEJ,IAAMX,GACDkB,GACDL,EAAaS,KAAI,SAACC,GACd,MAAO,CACHtB,GAAIsB,EAAKtB,GACTuB,MAAOD,EAAKE,YACZC,UAAW,IAAIC,KAAKJ,EAAKK,aACzBC,QAAS,IAAIF,KAAKJ,EAAKO,cAInC,OAAO,cAACC,EAAA,EAAD,CAAUP,MAAM,iCAAhB,SAA0BN,EAA2C,cAACc,EAAA,EAAD,IAAjC7B,EAAa,IAAIwB,KAAQ3B","file":"static/js/17.db7a49c5.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport config from '../../../config';\r\n\r\nconst path = 'appointment';\r\n\r\nexport const getAppointments = createAsyncThunk('appointments/getList', async () => {\r\n    return (await axios.get(`${config.apiUrl}/${path}`)).data.data;\r\n});\r\n\r\nexport const getAppointmentDetail = createAsyncThunk('appointments/getDetail', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/view?id=${id}`)).data.data;\r\n});\r\n\r\nexport const createOrUpdateAppointment = createAsyncThunk('doctor/createOrUpdate', async ({ data, id }) => {\r\n    if (id) {\r\n        return (await axios.post(`${config.apiUrl}/${path}/update?id=${id}`, data)).data.data;\r\n    } else {\r\n        return (await axios.post(`${config.apiUrl}/${path}/create`, data)).data.data;\r\n    }\r\n});\r\n\r\nexport const deleteAppointment = createAsyncThunk('doctor/delete', async (id) => {\r\n    return (await axios.get(`${config.apiUrl}/${path}/delete?id=${id}`)).data.data;\r\n});\r\n","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Appointments, Scheduler, WeekView } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\n\r\nfunction WeekSchedule(currentDate, data) {\r\n    return (\r\n        <Paper>\r\n            <Scheduler data={data} height={660} locale=\"ru-RU\">\r\n                <ViewState currentDate={currentDate} />\r\n                <WeekView startDayHour={8} endDayHour={22} />\r\n                <Appointments />\r\n            </Scheduler>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default WeekSchedule;\r\n","import MainCard from '../../../ui-component/cards/MainCard';\r\nimport React, { useEffect, useState } from 'react';\r\nimport WeekSchedule from '../../../components/schedule/WeekSchedule';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAppointments } from './appointmentStore';\r\nimport HelmLoading from '../../../components/loading/HelmLoading';\r\n\r\nfunction AppointmentPage() {\r\n    const dispatch = useDispatch();\r\n    const appointments = useSelector((state) => state.pages.appointments);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        dispatch(getAppointments()).then(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    const data =\r\n        !loading &&\r\n        appointments.map((item) => {\r\n            return {\r\n                id: item.id,\r\n                title: item.description,\r\n                startDate: new Date(item.create_data),\r\n                endDate: new Date(item.end_data)\r\n            };\r\n        });\r\n\r\n    return <MainCard title=\"Приём\">{!loading ? WeekSchedule(new Date(), data) : <HelmLoading />}</MainCard>;\r\n}\r\n\r\nexport default AppointmentPage;\r\n"],"sourceRoot":""}