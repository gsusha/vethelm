{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","secondary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","FirebaseRegister","others","useTheme","scriptedRef","matchDownSM","useMediaQuery","breakpoints","down","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","label","color","errorMain","warningDark","orangeMain","successMain","successDark","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","spacing","item","TextField","fullWidth","name","type","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Box","mb","alignItems","style","width","height","borderRadius","Typography","fontSize","FormControlLabel","control","Checkbox","to","mt","AnimateButton","Button","disableElevation","disabled","Register","m","Logo","Stack","dark","gutterBottom","textAlign","AuthRegister","Divider","textDecoration"],"mappings":"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","file":"static/js/10.c060e846.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Stack, Typography } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://github.com/gsusha\" target=\"_blank\" underline=\"hover\">\r\n            gsusha\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Некорректный э-мейл').max(255).required('Э-мейл обязателен'),\r\n                    password: Yup.string().max(255).required('Пароль обязателен')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Имя\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Фамилия\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Адрес электронной почты</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Пароль</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Соглашаюсь с &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                политикой конфиденциальности\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Зарегистрироваться\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.dark}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Регистрация\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Введите свои данные для продолжения\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Уже есть аккаунт?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}